.variant [
  .name typ
  .option [.type reg]
  .option [.type tmem]
]

.alias [
  .name reg
  .type int
]

.record [
  .name tmem
  .field [
    .name index-type
    .type typ
  ]
  .field [
    .name element-type
    .type typ
  ]
]

.enum [
  .name cast-type
  .option [.name cast-unsigned]
  .option [.name cast-signed]
  .option [.name cast-high]
  .option [.name cast-low]
]

.enum [
  .name binop-type
  .option [.name plus   ]
  .option [.name minus  ]
  .option [.name times  ]
  .option [.name divide ]
  .option [.name sdivide]
  .option [.name modbop ]
  .option [.name smod   ]
  .option [.name lshift ]
  .option [.name rshift ]
  .option [.name arshift]
  .option [.name andbop ]
  .option [.name orbop  ]
  .option [.name xor    ]
  .option [.name eq     ]
  .option [.name neq    ]
  .option [.name lt     ]
  .option [.name le     ]
  .option [.name slt    ]
  .option [.name sle    ]
]

.enum [
  .name unop-type
  .option [.name uneg]
  .option [.name unot]
]

.record [
  .name var
  .field [
    .name name
    .type string
  ]
  .field [
    .name id
    .type int
  ]
  .field [
    .name typ
    .type typ
  ]
]

% character lists, used for serializing bitvectors
% (with the Bitvector.bytes_of and of_bytes functions)
.alias [
  .name char
  .type int
  .ocaml-type "Piqirun_custom.char"
]

.list [
  .name char-list
  .type char
]
% bitvectors
.alias [
  .name bitvector
  .type char-list
  .ocaml-type "Piqirun_custom.bitvector"
]

% an address is now a bitvector
.alias [
  .name address
  .type bitvector
]
